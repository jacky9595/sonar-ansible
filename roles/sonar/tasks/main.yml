---
- name: create deployment user
  user:
      name: sonar
      password: "{{ user_pass_hash }}"
      shell: /bin/bash
      createhome: yes
      state: present

- name: Create a database for Sonar.
  become: true
  become_user: postgres
  postgresql_db:
    name: "{{ sonar_postgresql_database }}"
    state: present

- name: Create a sonar user postgresql.
  become: true
  become_user: postgres
  postgresql_user:
    db:   "{{ sonar_postgresql_database }}"
    name: "{{ sonar_postgresql_username }}"
 #   priv: "{{ sonar_postgresql_database }}.*:ALL"
    priv: ALL
    password: "{{ sonar_postgresql_password }}"
    expires: infinity
    encrypted: true

- name: Download Sonar.
  get_url:
    url: "{{ sonar_download_url }}"
    dest: "{{ workspace }}/{{ sonar_version_directory }}.zip"
    validate_certs: "{{ sonar_download_validate_certs }}"

- name: Unzip Sonar.
  unarchive:
    src: "{{ workspace }}/{{ sonar_version_directory }}.zip"
    dest: /usr/local/
    copy: false
    creates: /usr/local/sonar/COPYING

- name: Move Sonar into place.
  command: >
    mv /usr/local/{{ sonar_version_directory }} /usr/local/sonar
    creates=/usr/local/sonar/COPYING

- include: configure.yml

- sysctl:
    name: vm.max_map_count
    value: '262144'
    sysctl_set: yes
    state: present
    reload: yes

- name: Inserting a line to sonar.sh
  lineinfile:
      path: /usr/local/sonar/bin/linux-x86-64/sonar.sh
      line: RUN_AS_USER=sonar
      insertafter: "#RUN_AS_USER="

- name: Symlink sonar bin.
  file:
    src: /usr/local/sonar/bin/linux-x86-64/sonar.sh
    dest: /usr/bin/sonar
    state: link
  register: sonar_symlink

- name: Add sonar as init script for service management.
  file:
    src: /usr/local/sonar/bin/linux-x86-64/sonar.sh
    dest: /etc/init.d/sonar
    state: link
  when: "ansible_service_mgr != 'systemd'"

#  The new version of sonar conatins elasticsearch that use a rules that not user root
- name: Copy SonarQube systemd unit file into place (for systemd systems).
  template:
    src: sonar.unit.j2
    dest: /etc/systemd/system/sonar.service
    owner: "{{ sonar_postgresql_username }}"
    group: "{{ sonar_postgresql_username }}"
    mode: 0755
  when: "ansible_service_mgr == 'systemd'"

- name: User sonar chown to folder install
  file:
    dest: /usr/local/sonar
    owner: "{{ sonar_postgresql_username }}"
    group: "{{ sonar_postgresql_username }}"
    mode: 0755
    state: directory
    recurse: yes

- name: Ensure Sonar is running and set to start on boot.
  service: name=sonar state=started enabled=yes

#- name: Ensure Sonar is running and set to start on boot.
#  command: "sh /usr/local/sonar/bin/linux-x86-64/sonar.sh restart"

- name: Allow Sonar time to build on first start.
  pause: seconds=180
  when: sonar_symlink.changed
  tags: ['skip_ansible_lint']

- name: Make sure Sonar is responding on the configured port.
  wait_for: port=9000 delay=3 timeout=300
